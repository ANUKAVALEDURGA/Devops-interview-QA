Today QA from B3 Batch
==================================================================================
1.Differnce b/w Docker and V/M?

    
			VM                    vs 		Containerisation	 
	1. Virtualization at hardware level  		1. Virtualization at OS level 
	2. Heavyweight - consume more host 	        2. Lightweight
	   resources 	
	3. VM useses hypervisor 		        3. containerisation tool is used 
	4. limited performace - Boot up time            4. Native performace - usualy boot in seconds.
		is more which is in minutes 		5. Shares OS storage means only uses required storage.   
	5. Cosumes more storage 			6. Supports on Linux		 											   
	6. Supports all OS 							

2.How you scale up in K8's?

  kubectl scale deployment.v1.apps/deployment.yml --replicas=10

3.Differnce b/w CMD & ENTRYPOINT?
 
   	
		- Both CMD and ENTRYPOINT are used to define the execution command of the container which will be created 
		  from this image.
		- If we use multiple CMD or ENTRYPOINT in the same Dockerfile only the latest one will be considered 
		  and all the other CMD or ENTRYPOINT will be ignored.	
		- If we use both CMD and ENTRYPOINT in the same Dockerfile, ENTRYPOINT will get the 
		  higest priority and the command of CMD will become as argumetns to ENTRYPOINT	
		  
		 Difference  
		  -	CMD command can be overridden at the runtime.	
		  - ENTRYPOINT can't be overridden at the runtime but the runtime command
		    will become parameters to ENTRYPOINT command.

4.k8's architecture?
     
   K8's has master node and nodes
   master nods components are 

 API server:   1.its a main point and brain of the cluster
               2.all the componends are directly connected to API server,they communicate though API server only
                   None of the components are directly connected with each other
               3.this is the only component which has access to atcd and writes the cluster data into etcd data base.
               4.all the cluster requests will be authenticate and authorized by API server
               5.it has a watch mechanism for watching the changes in the cluster.
 etcd:
              1.etcd is a distributed and consisten key,value store for storing all the cluster data.
              2.it stores and maintainers cluster data.

shedular:    1.shedular is responsible for monitoring API server for any New pod request.
             2.it communicates to API server for every 5 sec.
             3.shedular main work is to decide in which node the pod should be created based on the
                worker node load,affinity,anti-affinity.

control manager:


5.how to check docker logs?

ANS:docker logs <container id>

6.how to check deployment events?

ANS:kubectl get events <deployment_Name>

  or
  kubectl describe deployment 
  
7. how to check which image is using in deployment

ANS: kubectl describe deployment <deployment_pod_name>

8.How to change image name once the pod created? tell me the command?

ANS:kubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.16.1
 
9.difference b/w annotations and labels?

10.difference b/w replicaset and replica controller?

11.How to delete dangling images?

ANS:docker image prune

12.how to delete unwanted volume or deduse the container size?
 
ANS:docker volume prune

13.what happens when you run system Prune in docker

14.write a groovy script to run a paralle build in jenkins

pipeline {
	agent { label 'master' } 
	stages {
		stage('Both build and test') {
			parallel {
				stage('Build') { 
					steps {
						sh 'sleep 15; echo "This is a Build stage"'
					}
				}
				
				stage('Test'){
					steps {
						sh '''
							sleep 15
							echo "This is a Test stage"
						'''	
						git branch: 'main', url: 'https://github.com/jaintpharsha/devops-jan-22.git'
					}
				}
			} 
		}
		stage('Deploy'){
			steps {
				sh '''
					sleep 5
					echo "This is a Deploy stage"
				'''
			}
		}
		
		stage('My-stage'){
			steps {
				sh '''
					sleep 5
					echo "This is a My-stage stage"
				'''
			}
		}	
	}
}

15.what parameters you used in jenkins? explain them?
   
16.what plugins you used in jenkins? explain them?

17.what are the network types in docker?explain them?

18.why we use None n/w type?

19.How will you check different status of Pod? explain Pod life cycle?

  Waiting,Running,Terminated

20.what are the worker componends?k8's?

21.what are the ways to trigger jenkins job?
 
 web-hooks,pollSCM,build periodically

22.difference b/w namespaces and cgroups

=====================================================
Today QA from B6 Batch
=======================================================
22.Explain docker architecture?

23.How docker and K8s integrate in your ci CD?

24.how u persistent data in docker?

using Docker volume

25.how to delete dangling images. 

docker image prune

26.suppose your container is full, how to make a container free space

 Dokcer container prune

